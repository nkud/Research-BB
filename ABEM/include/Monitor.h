/*
 * =====================================================================================
 *
 *       Filename:  Monitor.h
 *
 *    Description:  モニター
 *
 *         Author:  Naoki Ueda
 *   Organization:  OPU, 3G
 *
 * =====================================================================================
 */

#ifndef ___MONITOR
#define ___MONITOR

#include <map>
#include <fstream>

class Tag;
class Virus;

/*
 * =====================================================================================
 *        Class:  Monitor
 *  Description:  ( シングルトンパターン )
 * =====================================================================================
 */
class Monitor {
    public:
        /*-----------------------------------------------------------------------------
         *  ゲッタ
         *-----------------------------------------------------------------------------*/
        int getContactNum() const;                                   /* 接触回数を返す */
        int getInfectionContactNum( Virus * );              /* 指定のウイルスの感染接触回数を返す */

        static Monitor& Instance();                                  /* インスタンスを返す */

        /*-----------------------------------------------------------------------------
         *  カウンタ
         *-----------------------------------------------------------------------------*/
        void countUpContact();                                       /* 接触しした回数 */
        void countUpInfectionContact( Virus * );            /* 感染のために接触してあるウイルスに感染した回数 */

        void resetAll();                                             /* 値をすべてリセット */

        /*-----------------------------------------------------------------------------
         *  期間
         *-----------------------------------------------------------------------------*/
        void setTerm( int t );                                       /* 期間を取得 */
        int getTerm() const;                                         /* 期間を返す */

    private:
        Monitor(): term_(0), num_contact_(0) { }                     /* コンストラクタ */

        int num_contact_;                                            /* 接触回数 */
        std::map<Virus *, int> num_infection_contact_;      /* 感染させた接触回数 */

        int term_;
};

#endif
