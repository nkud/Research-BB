!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Agent	Agent.cpp	/^Agent :: Agent( int len ) :$/;"	f	class:Agent
Agent	Agent.h	/^class Agent : public __TagInterface$/;"	c
FOR	Global.h	17;"	d
TAG_LEN_A	Global.h	/^const int TAG_LEN_A = 20 ; $/;"	v
TAG_LEN_V	Global.h	/^const int TAG_LEN_V = 3  ;                            \/* ウイルスのタグの長さ *\/$/;"	v
VIRUS	Virus.h	15;"	d
Virus	Virus.cpp	/^Virus :: Virus( int len ) :$/;"	f	class:Virus
Virus	Virus.h	/^class Virus : public __TagInterface                                    \/* ウイルスのクラス*\/$/;"	c
__TagInterface	TagInterface.cpp	/^__TagInterface :: __TagInterface( int n )$/;"	f	class:__TagInterface
__TagInterface	TagInterface.h	/^class __TagInterface$/;"	c
___AGENT	Agent.h	15;"	d
___FUNCTION	Function.h	10;"	d
___GLOBAL	Global.h	15;"	d
___TAG	TagInterface.h	16;"	d
getTag_	TagInterface.cpp	/^int *__TagInterface :: getTag_()$/;"	f	class:__TagInterface
ham_distance	Function.cpp	/^int ham_distance(int *a, int *b, int n)$/;"	f
hasImmunity	Agent.cpp	/^bool Agent :: hasImmunity( Virus &v )$/;"	f	class:Agent
len	TagInterface.h	/^        int len;$/;"	m	class:__TagInterface
main	main.cpp	/^int main()$/;"	f
min_ham_distance	Function.cpp	/^int min_ham_distance(int *a, int *b, int an, int bn)$/;"	f
tag_	TagInterface.h	/^        tag_t *tag_;$/;"	m	class:__TagInterface
tag_t	TagInterface.h	/^typedef int tag_t;$/;"	t
